{"version":3,"sources":["styles/index.js","templates/components/Header/style.js","templates/components/Header/index.js","templates/components/CardListContainer/style.js","templates/components/Card/style.js","templates/components/Card/messages.js","templates/components/EditDetails/style.js","templates/components/EditDetails/index.js","templates/components/Card/index.js","templates/components/CardListContainer/index.js","templates/pages/Contacts/index.js","sdk/actions/ActionTypes.js","sdk/service/index.js","sdk/actions/index.js","decoratedApp.js","serviceWorker.js","templates/components/Body/style.js","templates/components/Body/index.js","templates/pages/Home/index.js","sdk/store/index.js","sdk/reducers/index.js","index.js"],"names":["variables","StyledNav","styled","nav","Header","className","onClick","window","location","href","type","data-toggle","data-target","id","div","StyledLoader","StyledCard","messages","CITY_LABEL","ORG_LABEL","StyledForm","form","StyledModal","noop","EditDetails","props","state","name","email","phone","city","address","website","company","handleInputChange","bind","handleSubmitAndMergeData","event","target","this","setState","value","e","preventDefault","onSubmit","onCancel","htmlFor","onChange","Component","defaultProps","Card","useState","isOpen","setIsOpen","toggleIsOpen","document","body","style","overflow","rel","message","newData","submitHandler","CardListContainer","data","length","map","item","key","getCardList","propTypes","PropTypes","array","ContactsPage","setTimeout","fetchData","contactList","updateItem","ActionTypes","SAVE_DATA","FETCH_DATA","HANDLE_EDIT","fetchContactDetails","a","axios","get","response","error","Actions","dispatch","connect","App","Boolean","hostname","match","StyledBody","StyledButton","input","Body","src","alt","Home","myStore","createStore","action","compose","applyMiddleware","thunk","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","store","Store","basename","path","exact","component","HomePage","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1cb3107b.chunk.js","sourcesContent":["const variables = {\n  primaryColor: \"#ed1965\",\n  customGreen: \"#53d581\",\n  shark: \"#333333\",\n  pitchBlack: \"#000000\",\n  pitchBlackTrans: \"#00000066\",\n  mildGrey: \"#f3f3f3\",\n  darkGrey: \"#6c6c6c\",\n  lightShark: \"#333333cc\"\n};\nexport { variables };\n","import styled from \"styled-components\";\nimport { variables } from \"../../../styles\";\n\nconst StyledNav = styled.nav`\n  && {\n    background-color: #334a5e !important;\n\n    .navbar-brand {\n      font-family: \"Pacifico\", cursive;\n    }\n    .button.navbar-brand.btn.btn-link:hover {\n      color: #ed1a64;\n    }\n  }\n`;\n\nexport { StyledNav };\n","import React from \"react\";\nimport { StyledNav } from \"./style\";\n\nconst Header = () => {\n  const navigateToHome = () => {\n    window.location.href = \"/\";\n  };\n\n  return (\n    <StyledNav className=\"navbar navbar-expand-md bg-dark navbar-dark\">\n      <button\n        onClick={navigateToHome}\n        className=\"navbar-brand btn btn-link\"\n        type=\"button\"\n      >\n        investo\n      </button>\n      <button\n        className=\"navbar-toggler\"\n        type=\"button\"\n        data-toggle=\"collapse\"\n        data-target=\"#collapsibleNavbar\"\n      >\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n      <div className=\"collapse navbar-collapse\" id=\"collapsibleNavbar\">\n        <ul className=\"navbar-nav\">\n          <li className=\"nav-item\">\n            <button className=\"nav-link btn btn-link\" type=\"button\">\n              About US\n            </button>\n          </li>\n          <li className=\"nav-item\">\n            <button className=\"nav-link btn btn-link\" type=\"button\">\n              Payment\n            </button>\n          </li>\n          <li className=\"nav-item\">\n            <button className=\"nav-link btn btn-link\" type=\"button\">\n              Reports\n            </button>\n          </li>\n        </ul>\n      </div>\n    </StyledNav>\n  );\n};\n\nexport default Header;\n","import styled from \"styled-components\";\nimport { variables } from \"../../../styles\";\n\nconst StyledCardList = styled.div``;\n\nconst StyledLoader = styled.div`\n  border: 16px solid ${variables.mildGrey};\n  border-top: 16px solid ${variables.primaryColor};\n  border-radius: 50%;\n  width: 120px;\n  height: 120px;\n  margin: 100px auto;\n  animation: spin 2s linear infinite;\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`;\n\nexport { StyledCardList, StyledLoader };\n","import styled from \"styled-components\";\nimport { variables } from \"../../../styles\";\n\nconst StyledCard = styled.div`\n  max-width: 400px;\n  font-family: \"Montserrat\", sans-serif;\n  &:hover {\n    box-shadow: 0 1rem 3rem rgba(0, 0, 0, 0.175) !important;\n  }\n  .edit-icon {\n    width: 24px;\n    height: auto;\n    position: absolute;\n    top: 20px;\n    right: 20px;\n    cursor: pointer;\n  }\n  .name {\n    font-family: \"montserrat-semibold\";\n    font-size: 1.5rem;\n    line-height: 1.5rem;\n    color: ${variables.primaryColor};\n    display: inline-block;\n    width: 100%;\n    overflow: hidden;\n  }\n\n  .contact {\n    font-size: 1rem;\n    line-height: 1.1rem;\n    height: 3rem;\n    overflow: hidden;\n    letter-spacing: -0.5px;\n    .email,\n    .phone {\n      color: ${variables.shark};\n      display: block;\n    }\n  }\n\n  .city-container {\n    font-size: 1.1rem;\n    color: ${variables.lightShark};\n  }\n\n  .website-container {\n    transition: all 0.3s;\n    border: 1px dashed ${variables.shark};\n    border-radius: 8px;\n    cursor: pointer;\n    display: inline-block;\n\n    padding: 0px 12px;\n  }\n  .website {\n    font-size: 0.8rem;\n    color: ${variables.lightShark};\n  }\n  .website-container:hover {\n    background: ${variables.customGreen};\n  }\n  .website:hover {\n    text-decoration: none;\n  }\n`;\n\nexport { StyledCard };\n","const messages = {\n  CITY_LABEL: \"From: \",\n  ORG_LABEL: \"Company: \"\n};\nexport default messages;\n","import styled from \"styled-components\";\nimport { variables } from \"../../../styles\";\n\nconst StyledForm = styled.form``;\n\nconst StyledModal = styled.div`\n  &.modal {\n    display: block;\n    position: fixed;\n    z-index: 1;\n    padding-top: 5rem;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    overflow: auto;\n    background-color: ${variables.pitchBlack}; /** Fallback for old browsers**/\n    background-color: ${variables.pitchBlackTrans};\n  }\n  .modal-content {\n    background-color: #fefefe;\n    margin: auto;\n    padding: 1.8rem;\n    border: 1px solid ${variables.darkGrey};\n    width: 70%;\n    border-radius: 0.6rem;\n  }\n`;\n\nexport { StyledForm, StyledModal };\n","import React, { Component } from \"react\";\nimport { StyledForm, StyledModal } from \"./style\";\nimport PropTypes from \"prop-types\";\n\nconst noop = () => {};\n\nclass EditDetails extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: this.props.name,\n      email: this.props.email,\n      phone: this.props.phone,\n      city: this.props.address && this.props.address.city,\n      website: this.props.website,\n      company: this.props.company && this.props.company.name\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleSubmitAndMergeData = this.handleSubmitAndMergeData.bind(this);\n  }\n\n  handleInputChange(event) {\n    const target = event.target;\n    const id = target.id;\n    this.setState({\n      [id]: target.value\n    });\n  }\n\n  handleSubmitAndMergeData(e) {\n    e.preventDefault();\n    const { name, email, phone, city, website, company } = this.state;\n    const onSubmit = (this.props && this.props.onSubmit) || noop;\n\n    const returnData = {\n      ...this.props,\n      name,\n      email,\n      phone,\n      website,\n      address: {\n        ...this.props.address,\n        city\n      },\n      company: {\n        ...this.props.company,\n        name: company\n      }\n    };\n    onSubmit(returnData);\n  }\n\n  render() {\n    const onCancel = (this.props && this.props.onCancel) || noop;\n    return (\n      <>\n        <StyledModal className=\" card modal\">\n          <StyledForm className=\"edit-form modal-content shadow-lg\">\n            <div className=\"form-group\">\n              <label htmlFor=\"name\">Name:</label>\n              <input\n                type=\"name\"\n                value={this.state.name}\n                className=\"form-control\"\n                id=\"name\"\n                onChange={this.handleInputChange}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"email\">Email address:</label>\n              <input\n                type=\"email\"\n                value={this.state.email}\n                className=\"form-control\"\n                id=\"email\"\n                onChange={this.handleInputChange}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"phone\">Phone</label>\n              <input\n                type=\"phone\"\n                value={this.state.phone}\n                className=\"form-control\"\n                id=\"phone\"\n                onChange={this.handleInputChange}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"city\">city</label>\n              <input\n                type=\"city\"\n                value={this.state.city}\n                className=\"form-control\"\n                id=\"city\"\n                onChange={this.handleInputChange}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"website\">website</label>\n              <input\n                type=\"url\"\n                value={this.state.website}\n                className=\"form-control\"\n                id=\"website\"\n                onChange={this.handleInputChange}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"company\">company</label>\n              <input\n                type=\"company\"\n                value={this.state.company}\n                className=\"form-control\"\n                id=\"company\"\n                onChange={this.handleInputChange}\n              />\n            </div>\n\n            <button\n              type=\"button\"\n              onClick={onCancel}\n              className=\"btn btn-secondary my-1\"\n            >\n              Cancel\n            </button>\n            <button\n              onClick={this.handleSubmitAndMergeData}\n              type=\"submit\"\n              className=\"btn btn-primary mt-1\"\n            >\n              Submit\n            </button>\n          </StyledForm>\n        </StyledModal>\n      </>\n    );\n  }\n}\n\nEditDetails.defaultProps = {\n  name: \"\",\n  email: \"\",\n  phone: \"\",\n  address: {},\n  website: \"\",\n  company: {}\n};\n\nEditDetails.propTypes = {\n  name: PropTypes.string.isRequired,\n  email: PropTypes.string,\n  phone: PropTypes.string,\n  address: PropTypes.object,\n  website: PropTypes.string,\n  company: PropTypes.object\n};\nexport default EditDetails;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { StyledCard } from \"./style\";\nimport message from \"./messages\";\nimport EditDetails from \"../EditDetails\";\n\nconst Card = props => {\n  const { name, email, phone, address, website, company } = props;\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggleIsOpen = () => {\n    document.body.style.overflow = !isOpen ? \"hidden\" : \"scroll\";\n    setIsOpen(!isOpen);\n  };\n\n  const handleEdit = newData => {\n    props.submitHandler && props.submitHandler(newData);\n    toggleIsOpen();\n  };\n\n  return (\n    <StyledCard className={`card shadow m-3`}>\n      <div className=\"card-body\">\n        <div className=\"card-title\">\n          <span className=\"name\">{name}</span>\n        </div>\n\n        <div className=\"contact\">\n          <a\n            href={`mailto:${email}?subject=Mail from Our Site`}\n            className=\"email\"\n            rel=\"noreferrer noopener\"\n            target=\"_blank\"\n          >\n            {email}\n          </a>\n          <span className=\"phone mt-1\">{phone}</span>\n        </div>\n        {address && address.city && (\n          <div className=\"city-container\">\n            <span className=\"city label\">{message.CITY_LABEL}</span>\n            <span className=\"city\">{address.city}</span>\n          </div>\n        )}\n        {website && (\n          <div className=\"website-container\">\n            <a\n              className=\"website\"\n              href={website}\n              rel=\"noreferrer noopener\"\n              target=\"_blank\"\n            >\n              {website}\n            </a>\n          </div>\n        )}\n        {company && company.name && (\n          <div className=\"org-container my-3\">\n            <span className=\"org-label\">{message.ORG_LABEL} </span>\n            <span className=\"org\">{company.name}</span>\n          </div>\n        )}\n        <div className=\"edit\">\n          <input\n            onClick={toggleIsOpen}\n            type=\"button\"\n            className=\"btn btn-primary rounded-pill\"\n            value=\"Edit\"\n            data-toggle=\"modal\"\n            data-target=\"#exampleModalLong\"\n          />\n        </div>\n      </div>\n      {isOpen ? (\n        <EditDetails {...props} onSubmit={handleEdit} onCancel={toggleIsOpen} />\n      ) : null}\n    </StyledCard>\n  );\n};\n\nCard.propTypes = {\n  name: PropTypes.string.isRequired,\n  email: PropTypes.string,\n  phone: PropTypes.string,\n  address: PropTypes.object,\n  website: PropTypes.string,\n  company: PropTypes.object\n};\n\nexport default Card;\n","import React from \"react\";\nimport { StyledLoader } from \"./style\";\nimport PropTypes from \"prop-types\";\nimport Card from \"../Card\";\n\nconst getLoader = () => {\n  return <StyledLoader />;\n};\n\nconst getCardList = (data, submitHandler) => {\n  return (\n    <div className=\"row\">\n      {data.map(item => {\n        return (\n          <div key={item.id} className=\"col-sm-12 col-md-6 col-lg-4\">\n            <Card {...item} submitHandler={submitHandler} />\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nconst CardListContainer = ({ data, submitHandler }) => {\n  return data.length > 0 ? getCardList(data, submitHandler) : getLoader();\n};\n\nCardListContainer.defaultProps = {\n  data: []\n};\n\nCardListContainer.propTypes = {\n  data: PropTypes.array\n};\nexport default CardListContainer;\n","import React, { Component } from \"react\";\nimport Header from \"../../components/Header\";\nimport CardListContainer from \"../../components/CardListContainer\";\n\nclass ContactsPage extends Component {\n  componentDidMount() {\n    setTimeout(() => {\n      this.props.fetchData();\n    }, 2000);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header data={this.props.contactList} />\n        <div className=\"container\">\n          <CardListContainer\n            data={this.props.contactList}\n            submitHandler={this.props.updateItem}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ContactsPage;\n","const ActionTypes = {\n  SAVE_DATA: \"SAVE_DATA\",\n  FETCH_DATA: \"FETCH_DATA\",\n  HANDLE_EDIT: \"HANDLE_EDIT\"\n};\n\nexport default ActionTypes;\n","import axios from \"axios\";\n\nconst fetchContactDetails = async () => {\n  try {\n    const URL = \"./data.json\";\n    const response = await axios.get(URL);\n    return response;\n  } catch {\n    return { error: true };\n  }\n};\n\nexport { fetchContactDetails };\n","import ActionTypes from \"./ActionTypes\";\nimport { fetchContactDetails } from \"../service\";\n\nconst Actions = {\n  fetchData: async dispatch => {\n    const response = await fetchContactDetails();\n    dispatch({ type: ActionTypes.SAVE_DATA, contactList: response.data });\n  },\n  updateItem: (dispatch, item) => {\n    dispatch({ type: ActionTypes.HANDLE_EDIT, item });\n  }\n};\n\nexport default Actions;\n","import { connect } from \"react-redux\";\nimport App from \"./templates/pages/Contacts\";\n\nimport Actions from \"./sdk/actions\";\n\nconst mapStateToProps = state => {\n  return {\n    contactList: state.contactList\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchData: () => {\n      Actions.fetchData(dispatch);\n    },\n    updateItem: item => {\n      Actions.updateItem(dispatch, item);\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import styled from \"styled-components\";\n\nconst StyledBody = styled.div`\n  min-height: 30rem;\n  .container {\n    margin: 8rem auto;\n    text-align: center !important;\n  }\n  .pitch {\n    font-size: 2rem;\n    font-family: \"montserrat-semibold\";\n  }\n  img {\n    display: block;\n    margin: 0rem auto;\n  }\n`;\n\nconst StyledButton = styled.input`\n  font-family: montserrat-semibold;\n  background-color: #ed1965;\n  margin-top: 2.5rem;\n  outline: none;\n  color: #fff;\n  text-align: center;\n  border-radius: 2.5rem;\n  min-width: 16rem;\n  transition: all 0.3s;\n  font-size: 1.3rem;\n  line-height: 1.3rem;\n  padding: 1.1rem 3rem;\n  &:hover {\n    box-shadow: 0px 5px 19px 1px rgba(237, 25, 101, 0.5);\n  }\n`;\n\nexport { StyledBody, StyledButton };\n","import React from \"react\";\nimport { StyledBody, StyledButton } from \"./style\";\nconst Body = () => {\n  const navigateToContacts = () => {\n    window.location.href = \"/connect-me-now\";\n  };\n\n  return (\n    <StyledBody className=\"body\">\n      <div className=\"container\">\n        <div className=\"pitch\">Reach Out to Great Investors</div>\n        <div className=\"mb-4\">Fund your dream-project</div>\n        <img src=\"/investo.png\" className=\"my-1\" alt=\"ima\" />\n\n        <StyledButton\n          onClick={navigateToContacts}\n          type=\"button\"\n          value=\"Connect me now\"\n        ></StyledButton>\n      </div>\n    </StyledBody>\n  );\n};\n\nexport default Body;\n","import React from \"react\";\nimport Header from \"../../components/Header\";\nimport Body from \"../../components/Body\";\nconst Home = () => {\n  return (\n    <>\n      <Header />\n      <Body />\n    </>\n  );\n};\n\nexport default Home;\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport Reducer from \"../reducers\";\nimport thunk from \"redux-thunk\";\n\nconst initalState = {\n  contactList: []\n};\n\nconst myStore = createStore(\n  Reducer,\n  initalState,\n\n  compose(\n    applyMiddleware(thunk),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\n\nexport default myStore;\n","import ActionTypes from \"../actions/ActionTypes\";\n\nexport default function counter(state, action) {\n  switch (action.type) {\n    case ActionTypes.SAVE_DATA:\n      const newState = { ...state, contactList: action.contactList };\n      return newState;\n    case ActionTypes.HANDLE_EDIT:\n      const newData = state.contactList.map(item => {\n        if (item.id === action.item.id) {\n          return action.item;\n        }\n        return item;\n      });\n      return {\n        ...state,\n        contactList: newData\n      };\n    default:\n      return state;\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport \"./index.css\";\nimport App from \"./decoratedApp\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport HomePage from \"./templates/pages/Home\";\n// import EditSection from \"./templates/components/EditDetails\";\n\nimport Store from \"./sdk/store\";\n\nconst ProvidedApp = () => (\n  <Provider store={Store}>\n    <Router basename=\"/investo\">\n      <Route path=\"/\" exact component={HomePage} />\n      <Route path=\"/connect-me-now\" component={App} />\n      {/* <Route path=\"/test\" component={EditSection} /> */}\n    </Router>\n  </Provider>\n);\nReactDOM.render(<ProvidedApp />, document.getElementById(\"root\"));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}